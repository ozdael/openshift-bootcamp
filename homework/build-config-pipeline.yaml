apiVersion: v1
items:
- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: "pipeline-demo"
  spec:
    triggers:
    - github:
        secret: 5Mlic4Le
        type: GitHub
    - generic:
        secret: FiArdDBH
        type: Generic
    strategy:
      type: "JenkinsPipeline"
      jenkinsPipelineStrategy:
        jenkinsfile: |
          node {
              stage ("Build") {
                echo '*** Build Starting ***'
                openshiftBuild bldCfg: 'openshift-tasks', buildName: '', checkForTriggeredDeployments: 'false', commitID: '', namespace: '', showBuildLogs: 'false', verbose: 'false', waitTime: ''
                openshiftVerifyBuild bldCfg: 'openshift-tasks', checkForTriggeredDeployments: 'false', namespace: '', verbose: 'false'
                echo '*** Build Complete ***'
              }

              stage ("Deploy and Verify in Development Env") {
                echo '*** Deployment Starting ***'
                openshiftDeploy depCfg: 'openshift-tasks', namespace: '', verbose: 'false', waitTime: ''
                openshiftVerifyDeployment authToken: '', depCfg: 'openshift-tasks', namespace: '', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: ''
                echo '*** Deployment Complete ***'

                echo '*** Service Verification Starting ***'
                openshiftVerifyService authToken: '', namespace: 'pipeline-dev', svcName: 'openshift-tasks', verbose: 'false'
                echo '*** Service Verification Complete ***'
                openshiftTag(srcStream: 'openshift-tasks', srcTag: 'latest', destStream: 'openshift-tasks', destTag: 'testready')
              }

              stage ('Deploy and Test in Testing Env') {
                echo "*** Deploy testready build in pipeline-test project  ***"
                openshiftDeploy depCfg: 'openshift-tasks', namespace: 'pipeline-test', verbose: 'false', waitTime: ''
                openshiftVerifyDeployment authToken: '', depCfg: 'openshift-tasks', namespace: 'pipeline-test', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false'
                sleep 10
                sh 'curl http://openshift-tasks-pipeline-test.apps.c2f2.example.opentlc.com | grep openshift-tasks -q'
              }

              stage ('Promote and Verify in Production Env') {
                echo '*** Waiting for Input ***'
                input 'Should we deploy to Production?'
                openshiftTag(srcStream: 'openshift-tasks', srcTag: 'testready', destStream: 'openshift-tasks', destTag: 'prodready')
                echo '*** Deploying to Production ***'
                openshiftDeploy depCfg: 'openshift-tasks', namespace: 'pipeline-prod', verbose: 'false', waitTime: ''
                openshiftVerifyDeployment authToken: '', depCfg: 'openshift-tasks', namespace: 'pipeline-prod', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false'
                sleep 10
                sh 'curl http://openshift-tasks-pipeline-prod.apps.c2f2.example.opentlc.com | grep openshift-tasks -q'
              }
            }
          }

kind: List
metadata: {}

